$NetBSD: patch-aa,v 1.8 2012/10/24 15:32:56 joerg Exp $

--- configure.py.orig	2009-06-16 11:47:29 +0300
+++ configure.py	2009-06-17 05:21:23 +0300
@@ -197,23 +197,23 @@ class ConfigurePyQt3(ConfigureBase):
     def check_modules(self):
         pyqt_modules.append("qt")
 
-        check_module("qtcanvas", "qcanvas.h", "QCanvas()")
-        check_module("qtnetwork", "qsocket.h", "QSocket()")
-        check_module("qttable", "qtable.h", "QTable()")
-        check_module("qtxml", "qdom.h", "QDomImplementation()")
-        check_module("qtgl", "qgl.h", "QGLWidget()", opengl=1)
+        #check_module("qtcanvas", "qcanvas.h", "QCanvas()")
+        #check_module("qtnetwork", "qsocket.h", "QSocket()")
+        #check_module("qttable", "qtable.h", "QTable()")
+        #check_module("qtxml", "qdom.h", "QDomImplementation()")
+        #check_module("qtgl", "qgl.h", "QGLWidget()", opengl=1)
+
+        #if qt_version >= 0x030000:
+        #    check_module("qtui", "qwidgetfactory.h", "QWidgetFactory()", lib="qui")
 
-        if qt_version >= 0x030000:
-            check_module("qtui", "qwidgetfactory.h", "QWidgetFactory()", lib="qui")
-
-            if qt_edition in ("enterprise", "free"):
-                check_module("qtsql", "qsql.h", "QSql()")
+        #    if qt_edition in ("enterprise", "free"):
+        #        check_module("qtsql", "qsql.h", "QSql()")
 
-                if sys.platform == "win32" and sipcfg.sip_version >= 0x040200:
-                    check_module("qtaxcontainer", "qaxobject.h", "QAxObject()", lib="qaxcontainer")
+        #        if sys.platform == "win32" and sipcfg.sip_version >= 0x040200:
+        #            check_module("qtaxcontainer", "qaxobject.h", "QAxObject()", lib="qaxcontainer")
 
-        if qsci_version:
-            check_module("qtext", "qextscintillabase.h", "QextScintillaBase()", define=qsci_define, include_dir=opt_qsciincdir, lib_dir=opt_qscilibdir, lib="qscintilla")
+        #if qsci_version:
+        #    check_module("qtext", "qextscintillabase.h", "QextScintillaBase()", define=qsci_define, include_dir=opt_qsciincdir, lib_dir=opt_qscilibdir, lib="qscintilla")
 
         if opt_qtpetag:
             pyqt_modules.append("qtpe")
@@ -258,7 +258,7 @@ class ConfigurePyQt3(ConfigureBase):
         }
 
     def code(self, extra_include_dirs, extra_lib_dir, extra_libs):
-        generate_code("qt", extra_include_dirs=extra_include_dirs, extra_lib_dir=extra_lib_dir, extra_libs=extra_libs)
+        generate_code("qt", extra_include_dirs=extra_include_dirs, extra_lib_dir=extra_lib_dir, extra_libs=extra_libs, extra_cxxflags="-DANY=void")
 
         if "qtext" in pyqt_modules:
             generate_code("qtext", extra_define=qsci_define, extra_include_dirs=[opt_qsciincdir], extra_lib_dir=opt_qscilibdir, extra_libs=["qscintilla"], sip_flags=qtext_sip_flags)
@@ -289,7 +289,7 @@ class ConfigurePyQt3(ConfigureBase):
 
             sipconfig.inform("Creating pyuic Makefile...")
 
-            if prof or "qtxml" not in pyqt_modules:
+            if prof: # or "qtxml" not in pyqt_modules:
                 buildfile= "pyuic-prof.sbf"
 
                 for xml in ("qdom.cpp", "qxml.cpp"):
@@ -310,7 +310,7 @@ class ConfigurePyQt3(ConfigureBase):
             makefile.extra_defines.append("UIC")
             makefile.extra_defines.append("QT_INTERNAL_XML")
 
-            if prof or "qtxml" not in pyqt_modules:
+            if prof: # or "qtxml" not in pyqt_modules:
                 makefile.extra_defines.append("QT_MODULE_XML")
 
             if qt_version < 0x030100:
@@ -321,7 +321,7 @@ class ConfigurePyQt3(ConfigureBase):
 
             sipconfig.inform("Creating pylupdate Makefile...")
 
-            if prof or "qtxml" not in pyqt_modules:
+            if prof: # or "qtxml" not in pyqt_modules:
                 buildfile= "pylupdate-prof.sbf"
 
                 shutil.copyfile(qt_dir + "/src/xml/qxml.cpp", "pylupdate3/qxml.cpp")
@@ -340,7 +340,7 @@ class ConfigurePyQt3(ConfigureBase):
 
             makefile.extra_defines.append("QT_INTERNAL_XML")
 
-            if prof or "qtxml" not in pyqt_modules:
+            if prof: # or "qtxml" not in pyqt_modules:
                 makefile.extra_defines.append("QT_MODULE_XML")
 
             makefile.generate()
@@ -1010,7 +1010,7 @@ Type 'no' to decline the terms of the li
 
 """)
 
-    while 1:
+    while 0:
         try:
             resp = raw_input("Do you accept the terms of the license? ")
         except:
@@ -1392,7 +1392,7 @@ def main(argv):
     check_license()
 
     # Check for QScintilla.
-    check_qscintilla()
+    #check_qscintilla()
 
     # Check which modules to build.
     qtmod_lib = pyqt.check_modules()
